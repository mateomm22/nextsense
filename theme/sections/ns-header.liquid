

{% liquid
  assign order = 'logo,menu,localization,search,mobile_search,actions'

  if shop.customer_accounts_enabled
    assign order = 'mobile_search,logo,menu,localization,search,actions'
  endif

  assign rows = 'top,bottom' | split: ','
  assign search_style = 'none'

  if section.settings.show_search
    assign search_style = 'modal'
  endif

  if section.settings.enable_sticky_header == 'always'
    assign sticky = 'always'
  elsif section.settings.enable_sticky_header == 'scroll-up'
    assign sticky = 'scroll-up'
  endif

  capture logo
    content_for 'block', type: '_header-logo', id: 'header-logo'
  endcapture

  capture menu
    content_for 'block', type: '_header-menu', id: 'header-menu'
  endcapture

  capture mobile_menu
    content_for 'block', type: '_header-menu', id: 'header-menu', variant: 'mobile'
  endcapture

  capture navigation_bar
    content_for 'block', type: '_header-menu', id: 'header-menu', variant: 'navigation_bar', transparent: 'always'
  endcapture

  capture actions
    render 'header-actions'
  endcapture

  if shop.customer_accounts_enabled
    assign search_class = 'mobile:hidden'
  endif

  if section.settings.search_position == 'left'
    if shop.customer_accounts_enabled
      assign order = 'mobile_search,logo,search,menu,localization,actions'
    else
      assign order = 'logo,search,menu,localization,mobile_search,actions'
    endif
  endif
  capture search
    render 'search', style: search_style, class: search_class
  endcapture

  # Skip mobile search under specific conditions:
  # Always render if search_row is bottom
  # Don't render when shop.customer_accounts_enabled is false and search_position is left and search_style is not none
  assign skip_mobile_search = false
  if shop.customer_accounts_enabled == false and section.settings.search_position == 'left' and search_style != 'none'
    assign skip_mobile_search = true
  endif

  if section.settings.search_row == 'bottom' or search_style != 'none' and skip_mobile_search == false
    # Mobile search duplicate for when search is not in the right order for mobile layout
    capture mobile_search
      render 'search', class: 'desktop:hidden', style: search_style
    endcapture
  endif

  assign show_language = section.settings.show_language
  if localization.available_languages.size <= 1
    assign show_language = false
  endif

  assign show_country = section.settings.show_country
  if localization.available_countries.size <= 1
    assign show_country = false
  endif

  if show_country or show_language
    capture localization_markup
      render 'dropdown-localization', show_country: show_country, show_language: show_language, country_style: section.settings.country_selector_style, localization_position: section.settings.localization_position
    endcapture
  endif

  assign bottom_row_blocks = ''

  if section.settings.menu_row == 'bottom'
    assign bottom_row_blocks = bottom_row_blocks | append: 'menu,'
  endif

  if section.settings.search_style != 'none'
    if section.settings.search_row == 'bottom'
      assign bottom_row_blocks = bottom_row_blocks | append: 'search,'
    endif
  endif

  if section.settings.show_country or section.settings.show_language
    if section.settings.localization_row == 'bottom'
      assign bottom_row_blocks = bottom_row_blocks | append: 'localization,'
    endif
  endif

  assign bottom_row_blocks = bottom_row_blocks | split: ',' | compact

  if section.settings.section_height == 'compact'
    assign header_height_class = ' header--compact'
  endif

  if bottom_row_blocks.size > 0 and section.settings.color_scheme_top.settings.background.rgb == section.settings.color_scheme_bottom.settings.background.rgb and section.settings.divider_width == 0
    assign collapse_header_paddings_class = 'header--collapse-row-paddings'
  endif

  assign class = 'header'

  if section.settings.color_scheme_top.settings.background.alpha != 1
    assign class = class | append: ' ' | append: 'header--inherit-color-scheme-on-menu-open'
  endif

  if header_height_class
    assign class = class | append: ' ' | append: header_height_class
  endif

  if collapse_header_paddings_class
    assign class = class | append: ' ' | append: collapse_header_paddings_class
  endif
%}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

<header-component
  id="header-component"
  class="{{ class }}"
  {% if transparent %}
    transparent="{{ transparent }}"
  {% endif %}
  {% if sticky %}
    sticky="{{ sticky }}"
  {% endif %}
  data-skip-node-update
  data-scroll-direction="none"
>
  {% for row in rows %}
    {% liquid
      assign scheme = 'color_scheme_' | append: row
      assign class = 'header__row header__row--[row] color-[row_scheme] section section--full-width-margin section--[section-width]' | replace: '[row]', row | replace: '[row_scheme]', section.settings[scheme] | replace: '[section-width]', section.settings.section_width

      case row
        when 'top'
          assign first = mobile_menu

          if bottom_row_blocks.size > 0 and section.settings.divider_size == 'page-width'
            assign class = class | append: ' divider--page-width'
          endif

          if bottom_row_blocks.size > 0
            assign border_bottom_setting_id = 'divider_width'
          else
            assign border_bottom_setting_id = 'border_width'
          endif
        when 'bottom'
          assign first = ''
          assign class = class | append: ' mobile:hidden'

          assign border_bottom_setting_id = 'border_width'
      endcase

      assign style = '--border-bottom-width: [width]px; ' | replace: '[width]', section.settings[border_bottom_setting_id]

      if row == 'top'
        assign style = style | append: '--border-bottom-width-mobile: [width]px; ' | replace: '[width]', section.settings.border_width
      endif
    %}

    {% capture content %}
      {% render 'header-row',
        row: row,
        order: order,
        settings: section.settings,
        first: first,
        logo: logo,
        menu: menu,
        actions: actions,
        localization: localization_markup,
        search: search,
        mobile_search: mobile_search
      %}
    {% endcapture %}

    {% assign content = content | strip %}
    {% if content != blank %}
      <div
        class="{{ class | strip }}"
        ref="headerRowTop"
        {%- if style != blank -%}
          style="{{ style | strip }}"
        {%- endif -%}
      >
        <div class="header__columns spacing-style">
          {{ content }}
        </div>
      </div>
    {% endif %}
  {% endfor %}

  {% if navigation_bar != blank %}
    <div class="header__row header__row--mobile desktop:hidden color-{{ section.settings.color_scheme_bottom }}">
      {{ navigation_bar }}
    </div>
  {% endif %}
</header-component>

<script
  src="{{ 'header.js' | asset_url }}"
  type="module"
></script>

{% schema %}
{
  "name": "t:names.header",
  "tag": "header",
  "class": "header-section",
  "settings": [
    {
      "type": "header",
      "content": "t:content.logo"
    },
    {
      "type": "select",
      "id": "logo_position",
      "label": "t:settings.position",
      "options": [
        {
          "value": "left",
          "label": "t:options.left"
        },
        {
          "value": "center",
          "label": "t:options.center"
        },
        {
          "value": "right",
          "label": "t:options.right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "t:content.menu"
    },
    {
      "type": "select",
      "id": "menu_position",
      "label": "t:settings.position",
      "options": [
        {
          "value": "left",
          "label": "t:options.left"
        },
        {
          "value": "center",
          "label": "t:options.center"
        },
        {
          "value": "right",
          "label": "t:options.right"
        }
      ],
      "default": "left"
    },
    {
      "type": "select",
      "id": "menu_row",
      "label": "t:settings.row",
      "options": [
        {
          "value": "top",
          "label": "t:options.top"
        },
        {
          "value": "bottom",
          "label": "t:options.bottom"
        }
      ],
      "default": "top"
    },
    {
      "type": "header",
      "content": "t:content.customer_account"
    },
    {
      "type": "paragraph",
      "content": "t:content.manage_customer_accounts"
    },
    {
      "type": "header",
      "content": "t:content.search"
    },
    {
      "type": "checkbox",
      "id": "show_search",
      "label": "t:settings.search_icon",
      "default": true
    },
    {
      "type": "select",
      "id": "search_position",
      "label": "t:settings.search_position",
      "options": [
        {
          "value": "left",
          "label": "t:options.left"
        },
        {
          "value": "right",
          "label": "t:options.right"
        }
      ],
      "default": "right",
      "visible_if": "{{ section.settings.show_search }}"
    },
    {
      "type": "select",
      "id": "search_row",
      "label": "t:settings.search_row",
      "options": [
        {
          "value": "top",
          "label": "t:options.top"
        },
        {
          "value": "bottom",
          "label": "t:options.bottom"
        }
      ],
      "default": "top",
      "visible_if": "{{ section.settings.show_search }}"
    },
    {
      "type": "header",
      "content": "t:content.localization"
    },
    {
      "type": "checkbox",
      "id": "show_country",
      "label": "t:settings.country_region",
      "info": "t:info.manage_countries_regions",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "country_selector_style",
      "label": "t:settings.flag",
      "default": true,
      "visible_if": "{{ section.settings.show_country }}"
    },
    {
      "type": "checkbox",
      "id": "show_language",
      "label": "t:settings.language_selector",
      "info": "t:info.manage_languages",
      "default": true
    },
    {
      "type": "select",
      "id": "localization_font",
      "label": "t:settings.font",
      "options": [
        {
          "value": "heading",
          "label": "t:options.heading"
        },
        {
          "value": "subheading",
          "label": "t:options.subheading"
        },
        {
          "value": "body",
          "label": "t:options.body"
        },
        {
          "value": "accent",
          "label": "t:options.accent"
        }
      ],
      "default": "heading",
      "visible_if": "{{ section.settings.show_country or section.settings.show_language }}"
    },
    {
      "type": "select",
      "id": "localization_font_size",
      "label": "t:settings.size",
      "options": [
        {
          "value": "0.625rem",
          "label": "10px"
        },
        {
          "value": "0.75rem",
          "label": "12px"
        },
        {
          "value": "0.875rem",
          "label": "14px"
        },
        {
          "value": "1rem",
          "label": "16px"
        },
        {
          "value": "1.125rem",
          "label": "18px"
        }
      ],
      "default": "1rem"
    },
    {
      "type": "select",
      "id": "localization_position",
      "label": "t:settings.position",
      "options": [
        {
          "value": "left",
          "label": "t:options.left"
        },
        {
          "value": "right",
          "label": "t:options.right"
        }
      ],
      "default": "right",
      "visible_if": "{{ section.settings.show_country or section.settings.show_language }}"
    },
    {
      "type": "select",
      "id": "localization_row",
      "label": "t:settings.row",
      "options": [
        {
          "value": "top",
          "label": "t:options.top"
        },
        {
          "value": "bottom",
          "label": "t:options.bottom"
        }
      ],
      "default": "top",
      "visible_if": "{{ section.settings.show_country or section.settings.show_language }}"
    },
    {
      "type": "header",
      "content": "t:content.appearance"
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "t:settings.width",
      "options": [
        {
          "value": "page-width",
          "label": "t:options.page"
        },
        {
          "value": "full-width",
          "label": "t:options.full"
        }
      ]
    },
    {
      "type": "select",
      "id": "section_height",
      "label": "t:settings.height",
      "options": [
        {
          "value": "compact",
          "label": "t:options.compact"
        },
        {
          "value": "standard",
          "label": "t:options.standard"
        }
      ],
      "default": "standard"
    },
    {
      "type": "select",
      "id": "enable_sticky_header",
      "label": "t:settings.sticky_header",
      "options": [
        {
          "value": "always",
          "label": "t:options.always"
        },
        {
          "value": "scroll-up",
          "label": "t:options.on_scroll_up"
        },
        {
          "value": "never",
          "label": "t:options.never"
        }
      ],
      "default": "always"
    },
    {
      "type": "range",
      "id": "divider_width",
      "label": "t:settings.divider_thickness",
      "min": 0,
      "max": 5,
      "step": 0.5,
      "unit": "px",
      "default": 0,
      "visible_if": "{{ section.settings.menu_row == 'bottom' or section.settings.localization_row == 'bottom' or section.settings.search_row == 'bottom' }}"
    },
    {
      "type": "select",
      "id": "divider_size",
      "label": "t:settings.divider_width",
      "options": [
        {
          "value": "page-width",
          "label": "t:options.page"
        },
        {
          "value": "full-width",
          "label": "t:options.full"
        }
      ],
      "visible_if": "{{ section.settings.divider_width > 0 and section.settings.menu_row == 'bottom' or section.settings.localization_row == 'bottom' or section.settings.search_row == 'bottom' }}"
    },
    {
      "type": "range",
      "id": "border_width",
      "label": "t:settings.border_width",
      "min": 0,
      "max": 5,
      "step": 0.5,
      "unit": "px",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:content.colors"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme_top",
      "label": "t:settings.default",
      "default": "primary"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme_bottom",
      "label": "t:settings.bottom_row",
      "default": "primary",
      "visible_if": "{{ section.settings.menu_row == 'bottom' or section.settings.localization_row == 'bottom' or section.settings.search_row == 'bottom' }}"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme_transparent",
      "label": "t:settings.inverse",
      "default": "primary",
      "visible_if": "{{ section.settings.enable_transparent_header_home or section.settings.enable_transparent_header_product or section.settings.enable_transparent_header_collection }}"
    },
  ],
  "presets": []
}
{% endschema %}
